buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

apply plugin: 'io.spring.dependency-management' // webSocket

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    all {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // MySQL
    implementation 'mysql:mysql-connector-java:8.0.32'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // JPA and ModelMapper
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.modelmapper:modelmapper:3.1.0'

    // Thymeleaf
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '3.3.1'
//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'
    implementation group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '3.3.0'

    //Gmail API
    implementation 'com.google.api-client:google-api-client:2.0.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    implementation 'com.google.apis:google-api-services-gmail:v1-rev20220404-2.0.0'


    // https://mvnrepository.com/artifact/com.sun.mail/javax.mail
    implementation group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'

    // Spring Email Support
    implementation 'org.springframework.boot:spring-boot-starter-mail'



    // QueryDSL
//    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
//    annotationProcessor  (
//            "jakarta.persistence:jakarta.persistence-api",
//            "jakarta.annotation:jakarta.annotation-api",
//            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
//    )

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // OpenAPI 3
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'

    // Thumbnailator
    implementation 'net.coobird:thumbnailator:0.4.16'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Thymeleaf & Spring Security 통합 라이브러리
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    implementation 'org.springframework.boot:spring-boot-starter-tomcat' // 내장 Tomcat 서버 사용
    implementation 'org.springframework.boot:spring-boot-starter-json' // JSON 처리 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-logging' // 로깅 라이브러리

    /* 메신저 라이브러리*/
    // webSocket 의존성 라이브러리 추가
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // ?
    implementation 'org.webjars:webjars-locator-core'
    // ?
    implementation group: 'org.webjars.bower', name: 'bootstrap', version: '5.3.3'
    // 소켓 클라이언트
    implementation group: 'org.webjars', name: 'sockjs-client', version: '1.5.1'
    // Stomp
    implementation group: 'org.webjars', name: 'stomp-websocket', version: '2.3.4'
    // Gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    // ?
    implementation group: 'org.webjars.npm', name: 'axios', version: '1.7.2'
    //
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'

    // javax.servlet 패키지를 사용하기 위한 의존성 추가
    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
    // compileOnly: 컴파일 시에는 포함되지만, 런타임에는 서블릿 컨테이너가 제공하는 의존성
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$buildDir/generated/sources/annotationProcessor/java/main"]
        }
    }
}

//tasks.named('clean') {
//    doFirst {
//        delete fileTree(dir: 'build/generated', include: '/*.java')
//    }
//}
//
//tasks.withType(JavaCompile) {
//    options.annotationProcessorPath = configurations.annotationProcessor
//    doFirst {
//        delete fileTree(dir: 'build/generated/sources/annotationProcessor/java/main', include: '/*.java')
//    }
//}
